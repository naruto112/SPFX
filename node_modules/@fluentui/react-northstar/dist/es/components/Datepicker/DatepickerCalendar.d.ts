import { Accessibility, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';
import { DateRangeType, DayOfWeek, FirstWeekOfYear, IDateGridStrings, IDay, IRestrictedDatesOptions } from '@fluentui/date-time-utilities';
import { ComponentWithAs } from '@fluentui/react-bindings';
import { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';
import { UIComponentProps } from '../../utils';
import { DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';
import { DatepickerCalendarCellProps } from './DatepickerCalendarCell';
import { DatepickerCalendarHeaderCellProps } from './DatepickerCalendarHeaderCell';
export declare const DEFAULT_CALENDAR_LOCALIZED_STRINGS: IDateGridStrings;
export interface IDateCalendarFormatting {
    /**
     * Format the date according to specified function.
     * Intended use case is localization.
     */
    format?: (date: Date) => string;
    /**
     * Parse date from string representation into Date type.
     */
    parse?: (date: string) => Date;
}
export interface IDatepickerCalendarOptions extends IRestrictedDatesOptions {
    /**
     * The first day of the week for your locale.
     */
    firstDayOfWeek?: DayOfWeek;
    /**
     * Defines when the first week of the year should start, FirstWeekOfYear.FirstDay,
     * FirstWeekOfYear.FirstFullWeek or FirstWeekOfYear.FirstFourDayWeek are the possible values
     */
    firstWeekOfYear?: FirstWeekOfYear;
    /**
     * The date range type indicating how  many days should be selected as the user
     * selects days
     */
    dateRangeType?: DateRangeType;
    /**
     * The number of days to select while dateRangeType === DateRangeType.Day. Used in order to have multi-day
     * views.
     */
    daysToSelectInDayView?: number;
    /**
     * Value of today. If null, current time in client machine will be used.
     */
    today?: Date;
    /**
     * Whether the calendar should show the week number (weeks 1 to 53) before each week row
     */
    showWeekNumbers?: boolean;
    /**
     * The days that are selectable when `dateRangeType` is WorkWeek.
     * If `dateRangeType` is not WorkWeek this property does nothing.
     */
    workWeekDays?: DayOfWeek[];
}
export interface DatepickerCalendarProps extends IDatepickerCalendarOptions, IDateCalendarFormatting, UIComponentProps {
    /** Calendar can have header. */
    header?: ShorthandValue<DatepickerCalendarHeaderProps>;
    /** A render function to customize how cells are rendered in the Calendar. */
    calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;
    /** A render function to customize how header cells are rendered in the Calendar. */
    calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;
    /**
     * The currently selected date
     */
    selectedDate?: Date;
    /**
     * The currently navigated date
     */
    navigatedDate?: Date;
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;
    /**
     * Called on change of the date.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props and proposed value.
     */
    onDateChange?: ComponentEventHandler<DatepickerCalendarProps & {
        value: IDay;
    }>;
    /** Localized labels */
    localizedStrings?: IDateGridStrings;
}
export declare type DatepickerCalendarStylesProps = never;
export declare const datepickerCalendarClassName = "ui-datepicker__calendar";
/**
 * A DatepickerCalendar is used to display dates in sematically grouped way.
 */
export declare const DatepickerCalendar: ComponentWithAs<'div', DatepickerCalendarProps> & FluentComponentStaticProps<DatepickerCalendarProps>;
