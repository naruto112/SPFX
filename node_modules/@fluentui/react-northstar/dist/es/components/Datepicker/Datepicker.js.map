{"version":3,"sources":["components/Datepicker/Datepicker.tsx"],"names":["datepickerBehavior","DateRangeType","DayOfWeek","FirstWeekOfYear","formatMonthDayYear","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","Ref","CalendarIcon","customPropTypes","PropTypes","React","commonPropTypes","createShorthand","createShorthandFactory","Button","Input","Popup","DatepickerCalendar","DatepickerCalendarCell","DatepickerCalendarHeader","DatepickerCalendarHeaderAction","DatepickerCalendarHeaderCell","DEFAULT_LOCALIZED_STRINGS","months","shortMonths","days","shortDays","datepickerClassName","Datepicker","props","context","displayName","telemetry","setStart","setEnd","datepickerRef","useRef","useState","open","setOpen","selectedDate","setSelectedDate","valueFormatter","date","firstDayOfWeek","firstWeekOfYear","dateRangeType","calendar","popup","className","design","styles","variables","calendarOptions","today","Date","navigatedDate","showCalendarGrid","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","rtl","mapPropsToInlineStyles","classes","overrideDatepickerCalendarProps","predefinedProps","onDateChange","e","itemProps","value","originalDate","calendarElement","defaultProps","overrideProps","element","unstable_wrapWithFocusZone","root","content","trapFocus","trigger","onOpenChange","propTypes","createCommon","itemShorthand","minDate","instanceOf","maxDate","restrictedDates","arrayOf","oneOf","Object","keys","map","name","daysToSelectInDayView","number","showWeekNumbers","bool","workWeekDays","localizedStrings","object","format","func","parse","disabled","isRequired","goToToday","string","placeholder","Monday","FirstDay","Day","create","Component","Calendar","CalendarHeader","CalendarHeaderAction","CalendarHeaderCell","CalendarCell"],"mappings":"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","sourcesContent":["import { Accessibility, datepickerBehavior, DatepickerBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  FirstWeekOfYear,\n  formatMonthDayYear,\n  IDateGridStrings,\n  IDay,\n  IDayGridOptions,\n  IRestrictedDatesOptions,\n} from '@fluentui/date-time-utilities';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { CalendarIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { Button } from '../Button/Button';\nimport { Input } from '../Input/Input';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { DatepickerCalendar, DatepickerCalendarProps } from './DatepickerCalendar';\nimport { DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarHeader } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarHeaderAction } from './DatepickerCalendarHeaderAction';\nimport { DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\n\n// TODO: extract to date-time-utilities\nexport const DEFAULT_LOCALIZED_STRINGS: IDateGridStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\n// TODO: extract to date-time-utilities\nexport interface IDateFormatting {\n  /**\n   * Format the date according to specified function.\n   * Intended use case is localization.\n   */\n  format?: (date: Date) => string;\n\n  /**\n   * Parse date from string representation into Date type.\n   */\n  parse?: (date: string) => Date;\n}\n\n// TODO: extract to date-time-utilities\nexport interface IDatepickerOptions extends IRestrictedDatesOptions {\n  /**\n   * The first day of the week for your locale.\n   */\n  firstDayOfWeek?: DayOfWeek;\n\n  /**\n   * Defines when the first week of the year should start, FirstWeekOfYear.FirstDay,\n   * FirstWeekOfYear.FirstFullWeek or FirstWeekOfYear.FirstFourDayWeek are the possible values\n   */\n  firstWeekOfYear?: FirstWeekOfYear;\n\n  /**\n   * The date range type indicating how  many days should be selected as the user\n   * selects days\n   */\n  dateRangeType?: DateRangeType;\n\n  /**\n   * The number of days to select while dateRangeType === DateRangeType.Day. Used in order to have multi-day\n   * views.\n   */\n  daysToSelectInDayView?: number;\n\n  /**\n   * Value of today. If null, current time in client machine will be used.\n   */\n  today?: Date;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * The days that are selectable when `dateRangeType` is WorkWeek.\n   * If `dateRangeType` is not WorkWeek this property does nothing.\n   */\n  workWeekDays?: DayOfWeek[];\n}\n\nexport interface DatepickerProps extends IDatepickerOptions, IDateFormatting, UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerBehaviorProps>;\n\n  /** Shorthand for the datepicker calendar. */\n  calendar?: ShorthandValue<DatepickerCalendarProps>;\n\n  /** Shorthand for the datepicker popup. */\n  popup?: ShorthandValue<PopupProps>;\n\n  /** Datepicker shows it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Datepicker shows it is currently unable to be interacted with. */\n  isRequired?: boolean;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerProps & { value: IDay }>;\n\n  /** String to render for button to direct the user to today's date. */\n  goToToday?: string;\n\n  /** Text placeholder for the input field. */\n  placeholder?: string;\n\n  /** Localized labels */\n  localizedStrings?: IDateGridStrings;\n}\n\nexport type DatepickerStylesProps = never;\n\nexport const datepickerClassName = 'ui-datepicker';\n\n/**\n * A Datepicker is used to display dates.\n * This component is currently UNSTABLE!\n */\nexport const Datepicker: ComponentWithAs<'div', DatepickerProps> &\n  FluentComponentStaticProps<DatepickerProps> & {\n    Calendar: typeof DatepickerCalendar;\n    CalendarHeader: typeof DatepickerCalendarHeader;\n    CalendarHeaderAction: typeof DatepickerCalendarHeaderAction;\n    CalendarHeaderCell: typeof DatepickerCalendarHeaderCell;\n    CalendarCell: typeof DatepickerCalendarCell;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Datepicker.displayName, context.telemetry);\n  setStart();\n  const datepickerRef = React.useRef<HTMLElement>();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [selectedDate, setSelectedDate] = React.useState<Date | undefined>();\n  const valueFormatter = date => (date ? formatMonthDayYear(date, DEFAULT_LOCALIZED_STRINGS) : '');\n  const {\n    firstDayOfWeek,\n    firstWeekOfYear,\n    dateRangeType,\n    calendar,\n    popup,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n  const calendarOptions: IDayGridOptions = {\n    selectedDate: selectedDate ?? props.today ?? new Date(),\n    navigatedDate: selectedDate ?? props.today ?? new Date(),\n    firstDayOfWeek,\n    firstWeekOfYear,\n    dateRangeType,\n  };\n\n  const showCalendarGrid = () => {\n    setOpen(true);\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Datepicker.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Datepicker.displayName,\n    actionHandlers: {},\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<DatepickerStylesProps>(Datepicker.displayName, {\n    className: datepickerClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const overrideDatepickerCalendarProps = (predefinedProps: DatepickerCalendarProps): DatepickerCalendarProps => ({\n    ...calendarOptions,\n    onDateChange: (e, itemProps) => {\n      setSelectedDate(itemProps.value.originalDate);\n      setOpen(false);\n      _.invoke(predefinedProps, 'onDateChange', e, itemProps);\n    },\n  });\n\n  const calendarElement = createShorthand(DatepickerCalendar, calendar, {\n    defaultProps: () => getA11yProps('calendar', {}),\n    overrideProps: overrideDatepickerCalendarProps,\n  });\n\n  const element = (\n    <Ref innerRef={datepickerRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ...unhandledProps,\n          })}\n        >\n          <Input readOnly onClick={showCalendarGrid} value={valueFormatter(selectedDate)} />\n          {createShorthand(Popup, popup, {\n            defaultProps: () => ({\n              open,\n              content: calendarElement,\n              trapFocus: true,\n              trigger: <Button icon={<CalendarIcon />} title=\"Open calendar\" iconOnly />,\n            }),\n            overrideProps: (predefinedProps: PopupProps): PopupProps => ({\n              onOpenChange: (e, { open }) => {\n                setOpen(open);\n                _.invoke(predefinedProps, 'onOpenChange', e, { open });\n              },\n            }),\n          })}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n};\n\nDatepicker.displayName = 'Datepicker';\n\nDatepicker.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendar: customPropTypes.itemShorthand,\n  popup: customPropTypes.itemShorthand,\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n\n  localizedStrings: PropTypes.object as PropTypes.Validator<IDateGridStrings>,\n\n  format: PropTypes.func,\n  parse: PropTypes.func,\n\n  disabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  goToToday: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nDatepicker.defaultProps = {\n  accessibility: datepickerBehavior,\n  calendar: {},\n  popup: {},\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n};\n\nDatepicker.handledProps = Object.keys(Datepicker.propTypes) as any;\n\nDatepicker.create = createShorthandFactory({ Component: Datepicker });\n\nDatepicker.Calendar = DatepickerCalendar;\nDatepicker.CalendarHeader = DatepickerCalendarHeader;\nDatepicker.CalendarHeaderAction = DatepickerCalendarHeaderAction;\nDatepicker.CalendarHeaderCell = DatepickerCalendarHeaderCell;\nDatepicker.CalendarCell = DatepickerCalendarCell;\n"],"file":"Datepicker.js"}